epsilon = 1e-3, verbose = FALSE)
View(resCBS0)
resCBS0[["H"]]
tmp <- t(resCBS0$H)
View(tmp)
gc()
setwd("C:/Users/86133/Desktop/TOAST")
library(tidyverse)
tpm <- read.table("DianCao_mRNA_TPM.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = 1)
library(rtracklayer)
gtf <- rtracklayer::import('gencode.vM12.annotation.gtf')
gtf<-as.data.frame(gtf)
gtf1 <- gtf %>% select(gene_id,gene_name)
gtf1 <- gtf1[!duplicated(gtf1), ]
tpm1 <- log2(tpm+1)
tpm1 <- tpm1 %>% mutate(gene_id=rownames(tpm1))
tpm2 <- merge(tpm1,gtf1,by="gene_id",all.x=TRUE)
tpm3 <- tpm2[,-1]
tpm3 <- apply(tpm3[,setdiff(colnames(tpm3), "gene_name")], 2, function(x) tapply(x, INDEX=factor(tpm3$gene_name), FUN=median, na.rm=TRUE))
tpm3 <- as.data.frame(tpm3)
tpm4 <- tpm3[-c(1:2039),]
###########################################################################################################
comp1 <- data.frame(sampleID=c("CKO_Hrt7","CKO_Hrt8","CKO_Hrt9","WT_Hrt1","WT_Hrt2","WT_Hrt3"),
group=c("Treatment","Treatment","Treatment","Control","Control","Control"))
rownames(comp1) <- comp1$sampleID
data1 <- tpm4[,comp1$sampleID]
rm(gtf)
rm(gtf1)
gc()
tmp <- read_csv("./data/Heart_neutrophil.csv")
temp <- read_csv("./data/Heart_neutrophil.csv")
rm(tmp)
gc()
View(temp)
temp_neu <- read_csv("./data/Heart_neutrophil.csv")
temp_myof <- read_csv("./data/Heart_myofibroblasts.csv")
temp_mono <- read_csv("./data/Heart_monocytes.csv")
temp_mac <- read_csv("./data/Heart_macrophages.csv")
temp_fib <- read_csv("./data/Heart_fibroblasts.csv")
temp_endo <- read_csv("./data/Heart_endothelial.csv")
temp_card <- read_csv("./data/Heart_cardiomyocytes.csv")
rm(temp)
gc()
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`)
lapply(myMarker, head, 3)
View(temp_mac)
View(temp_fib)
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`,
monocytes=temp_mono$`Cell Marker`,
macrophages=temp_mac$`Cell Marker`,
fibroblasts=temp_fib$`Cell Marker`,
endothelial=temp_endo$`Cell Marker`,
cardiomyocytes=temp_card$`Cell Marker`)
lapply(myMarker, head, 3)
data("CBS_PBMC_array")
CBS_mix <- CBS_PBMC_array$mixed_all
data_mix <= as.matrix(tmp4)
data_mix <= as.matrix(tpm4)
data_mix <- as.matrix(tpm4)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(resCBS0$H)
Prop <- t(res$H)
View(Prop)
data_mix <- as.matrix(data1)
library(TOAST)
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`,
monocytes=temp_mono$`Cell Marker`,
macrophages=temp_mac$`Cell Marker`,
fibroblasts=temp_fib$`Cell Marker`,
endothelial=temp_endo$`Cell Marker`,
cardiomyocytes=temp_card$`Cell Marker`)
lapply(myMarker, head, 3)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(res$H)
View(Prop)
data_mix <- as.matrix(tpm4)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(res$H)
View(Prop)
data_mix <- as.matrix(data1)
View(temp_card)
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`,
monocytes=temp_mono$`Cell Marker`,
macrophages=temp_mac$`Cell Marker`[1:19],
fibroblasts=temp_fib$`Cell Marker`,
endothelial=temp_endo$`Cell Marker`,
cardiomyocytes=temp_card$`Cell Marker`[1:19])
# lapply(myMarker, head, 3)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(res$H)
View(temp_fib)
View(temp_endo)
View(temp_neu)
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`,
monocytes=temp_mono$`Cell Marker`,
macrophages=temp_mac$`Cell Marker`[1:19],
fibroblasts=temp_fib$`Cell Marker`[1:20],
endothelial=temp_endo$`Cell Marker`[1:20],
cardiomyocytes=temp_card$`Cell Marker`[1:19])
# lapply(myMarker, head, 3)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(res$H)
View(Prop)
View(Prop)
View(comp1)
View(Prop)
design <- data.frame(group = as.factor(comp1$group))
Design_out <- makeDesign(design, Prop)
View(Design_out)
View(Design_out[["design"]])
View(data_mix)
fitted_model <- fitModel(Design_out, data_mix)
refinx <- findRefinx(data_mix, nmarker = 10000)
data <- data_mix[refinx,]
View(data)
fitted_model <- fitModel(Design_out, data)
View(Prop)
myMarker <- list(neutrophil=temp_neu$`Cell Marker`,
myofibroblasts=temp_myof$`Cell Marker`,
# monocytes=temp_mono$`Cell Marker`,
macrophages=temp_mac$`Cell Marker`[1:19],
fibroblasts=temp_fib$`Cell Marker`[1:20],
# endothelial=temp_endo$`Cell Marker`[1:20],
cardiomyocytes=temp_card$`Cell Marker`[1:19])
# lapply(myMarker, head, 3)
res <- MDeconv(data_mix, myMarker,
epsilon = 1e-3, verbose = FALSE)
Prop <- t(res$H)
View(Prop)
design <- data.frame(group = as.factor(comp1$group))
Design_out <- makeDesign(design, Prop)
fitted_model <- fitModel(Design_out, data_mix)
fitted_model <- fitModel(Design_out, data)
data <- data_mix[1:1000,]
fitted_model <- fitModel(Design_out, data)
data <- data_mix[1:100,]
fitted_model <- fitModel(Design_out, data)
Sys.getenv("GITHUB_PAT")
Sys.setenv(GITHUB_PAT = "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")
devtools::install_github("ruan2ruan/PIPET")
library(PIPET)
devtools::install_github('satijalab/seurat-data@b158a0c')
remotes::install_version("Seurat", "4.3.0")
remotes::install_version("Seurat", "4.3.0")
library(Seurat)
library(patchwork)
library(tidyverse)
library(SeuratData)
pbmc3k.final <- LoadData("pbmc3k", type = "pbmc3k.final")
View(pbmc3k.final)
library(PIPET)
library(tidyverse)
library(patchwork)
library(Seurat)
library(SeuratData)
InstallData("pbmc3k")
pbmc3k.final <- LoadData("pbmc3k", type = "pbmc3k.final")
View(pbmc3k.final)
SC = UpdateSeuratObject(object = pbmc3k.final)
SC
View(SC)
markers <- read.table("../data/AML_Subtypes_signature.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = NULL)
table(markers$class)
head(markers,5)
tmp <- PIPET(SC_data=SC, markers=markers, gene_col= "genes", class_col= "class",
nCores=4)
tmp$ID <- rownames(tmp)
metadata <- SC@meta.data
metadata$ID <- rownames(metadata)
meta <- merge(metadata,tmp,by="ID")
rownames(meta) <- meta$ID
SC <- AddMetaData(SC, metadata = meta)
SC1 <- subset(x = SC, subset= (Pvalue < 0.05))
table(SC1$prediction)
table(SC1$seurat_annotations,SC1$prediction)
set.seed(123)
tmp <- PIPET(SC_data=SC, markers=markers, gene_col= "genes", class_col= "class",
nCores=4)
SC = UpdateSeuratObject(object = pbmc3k.final)
SC
tmp$ID <- rownames(tmp)
metadata <- SC@meta.data
metadata$ID <- rownames(metadata)
meta <- merge(metadata,tmp,by="ID")
rownames(meta) <- meta$ID
SC <- AddMetaData(SC, metadata = meta)
SC1 <- subset(x = SC, subset= (Pvalue < 0.05))
table(SC1$prediction)
table(SC1$seurat_annotations,SC1$prediction)
DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
metadata <- SC@meta.data
temp <- data.frame(ID=SC1$ID,type=SC1$prediction)
meta <- merge(metadata,temp,by="ID",all = TRUE)
meta$type <- as.character(meta$type)
meta$type  <- ifelse(is.na(meta$type), "Undefined", meta$type)
rownames(meta) <- meta$ID
meta <- meta[SC$ID,]
SC <- AddMetaData(SC, metadata = meta)
library(RColorBrewer)
colors<-brewer.pal(n = 8, name = "Set1")
PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
```{r warning=FALSE, echo=TRUE, results="asis", message=FALSE, fig.height=5, fig.width=11}
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
rm
rm(p1)
rm(p2)
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
p1 | p2
PIPET_BarPlot(SC1,group="seurat_annotations",prediction="prediction",ylim=530)
DefaultAssay(SC1) <- "RNA"
Idents(SC1)="prediction"
#find markers for every cluster compared to all remaining cells, report only the positive ones
SC.markers <- FindAllMarkers(SC1, only.pos = TRUE,
min.pct = 0.25, logfc.threshold = 0.25)
biomarkers <- SC.markers %>%
dplyr::filter(p_val_adj<0.05) %>%
group_by(cluster) %>%
slice_max(n = 20000, order_by = avg_log2FC)
head(biomarkers,3)
tmp <- biomarkers %>%
group_by(cluster) %>%
slice_head(n = 4)
features <- tmp$gene
PIPET_MultiViolin(SC1, features, preprocess=FALSE)
biomarkers <- SC.markers %>%
dplyr::filter(p_val_adj<0.05) %>%
group_by(cluster) %>%
slice_max(n = 20000, order_by = avg_log2FC)
top <- biomarkers %>%
group_by(cluster) %>%
slice_head(n = 4)
top
features <- top$gene
PIPET_MultiViolin(SC1, features, preprocess=FALSE)
data("TCGA_LAML_TPM")
data("TCGA_LAML_Surv")
TPM <- data("TCGA_LAML_TPM")
surv.info <- lead("TCGA_LAML_Surv")
surv.info <- load("TCGA_LAML_Surv")
TPM <- load(system.file("data", "TCGA_LAML_TPM.RData", package = "PIPET"))
surv.info <- data("TCGA_LAML_Surv",package = "PIPET")
data("TCGA_LAML_Surv",package = "PIPET")
TPM <- load("../data/TCGA_LAML_TPM.RData")
load("E:/bulk and single-cell/PIPET/data/TCGA_LAML_TPM.rda")
TPM <- load("../data/TCGA_LAML_TPM.rda")
surv.info <-load("../data/TCGA_LAML_Surv.rda")
c3 <- biomarkers %>%
filter(cluster=="c3") %>%
filter(avg_log2FC>=2)
TPM.norm <- log2(TPM + 1)
TPM <- load("../data/TCGA_LAML_TPM.rda")
TPM <- data("TCGA_LAML_TPM")
TPM.norm <- log2(TPM + 1)
force(TCGA_LAML_TPM)
surv.info <-data("TCGA_LAML_Surv")
TPM.norm <- log2(TPM + 1)
force(TCGA_LAML_Surv)
TPM
TPM <- data("TCGA_LAML_TPM")
TPM
force(TCGA_LAML_TPM)
TPM <- force(data("TCGA_LAML_TPM"))
force(TCGA_LAML_TPM)
TPM <- data("TCGA_LAML_TPM")
TPM <- data.frame(TPM)
View(TPM)
TPM <- data("TCGA_LAML_TPM")
TPM <- delayedAssign(data("TCGA_LAML_TPM"))
TPM <- data("TCGA_LAML_TPM")
temp <- as.matrix(TPM)
View(temp)
TPM <- data("TCGA_LAML_TPM")
TPM
surv.info <-data("TCGA_LAML_Surv")
surv.info
TPM <- data("TCGA_LAML_TPM")
TCGA_LAML_TPM
surv.info <-data("TCGA_LAML_Surv")
TCGA_LAML_Surv
data("TCGA_LAML_TPM")
TPM <- TCGA_LAML_TPM
data("TCGA_LAML_Surv")
surv.info <- TCGA_LAML_Surv
View(TPM)
View(surv.info)
c3 <- biomarkers %>%
filter(cluster=="c3") %>%
filter(avg_log2FC>=2)
TPM.norm <- log2(TPM + 1)
TPM.norm <- data.frame(t(na.omit(TPM.norm[c3$gene,])))
View(TPM.norm)
genes <- colnames(TPM.norm)
View(surv.info)
multi_COX<-coxph(Surv(futime, fustat) ~ ., data=surv.info)
library(survival)
multi_COX<-coxph(Surv(futime, fustat) ~ ., data=surv.info)
multi_COX
tmp <-TPM.norm[rownames(surv.info),]
survival_info_df <- cbind(tmp,surv.info)
View(survival_info_df)
PIPET_KM(data=survival_info_df, genes=genes,coxph=multi_COX, surv_cols=c("fustat","futime"),
xlim=100,legend.title="TCGA-LAML", legend.labs = c("HRisk", "LRisk"),
pval = TRUE, conf.int = TRUE,  palette = "simpsons")
View(survival_info_df)
data=survival_info_df
genes=genes
coxph=multi_COX
surv_cols=c("fustat","futime")
library(survival)
library(survminer)
library(tidyverse)
info <- data[,surv_cols]
View(info)
for (gene in genes) {
tmp <- data[,gene]*(summary(coxph)$coefficients[gene,1])
info <- cbind(info,tmp)
}
gene=genes[1]
data[,gene]
summary(coxph)$coefficients[gene,1]
summary(coxph)
summary(coxph)$coefficients
multi_COX
summary(multi_COX)
View(multi_COX)
tmp <- summary(multi_COX)
View(tmp)
c3 <- biomarkers %>%
filter(cluster=="c3") %>%
filter(avg_log2FC>=2)
TPM.norm <- log2(TPM + 1)
TPM.norm <- data.frame(t(na.omit(TPM.norm[c3$gene,])))
genes <- colnames(TPM.norm)
tmp <-TPM.norm[rownames(surv.info),]
survival_info_df <- cbind(tmp,surv.info)
library(survival)
multi_COX<-coxph(Surv(futime, fustat) ~ ., data=survival_info_df)
multi_COX
PIPET_KM(data=survival_info_df, genes=genes,coxph=multi_COX, surv_cols=c("fustat","futime"),
xlim=100,legend.title="TCGA-LAML", legend.labs = c("HRisk", "LRisk"),
pval = TRUE, conf.int = TRUE,  palette = "simpsons")
sessionInfo()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
Sys.setenv(LANGUAGE = "en")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("ruan2ruan/PIPET")
library(PIPET)
library(tidyverse)
library(patchwork)
library(Seurat)
library(SeuratData)
InstallData("pbmc3k")
pbmc3k.final <- LoadData("pbmc3k", type = "pbmc3k.final")
SC = UpdateSeuratObject(object = pbmc3k.final)
SC
markers <- read.table("../data/AML_Subtypes_signature.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = NULL)
table(markers$class)
head(markers,5)
set.seed(123)
tmp <- PIPET(SC_data=SC, markers=markers, gene_col= "genes", class_col= "class",
nCores=4)
tmp$ID <- rownames(tmp)
metadata <- SC@meta.data
metadata$ID <- rownames(metadata)
meta <- merge(metadata,tmp,by="ID")
rownames(meta) <- meta$ID
SC <- AddMetaData(SC, metadata = meta)
SC1 <- subset(x = SC, subset= (Pvalue < 0.05))
table(SC1$prediction)
table(SC1$seurat_annotations,SC1$prediction)
DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
metadata <- SC@meta.data
temp <- data.frame(ID=SC1$ID,type=SC1$prediction)
meta <- merge(metadata,temp,by="ID",all = TRUE)
meta$type <- as.character(meta$type)
meta$type  <- ifelse(is.na(meta$type), "Undefined", meta$type)
rownames(meta) <- meta$ID
meta <- meta[SC$ID,]
SC <- AddMetaData(SC, metadata = meta)
library(RColorBrewer)
colors<-brewer.pal(n = 8, name = "Set1")
PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
PIPET_BarPlot(SC1,group="seurat_annotations",prediction="prediction",ylim=530)
SC1 <- subset(x = SC, subset= (Pvalue < 0.05))
table(SC1$prediction)
table(SC1$seurat_annotations,SC1$prediction)
data("TCGA_LAML_TPM")
TPM <- TCGA_LAML_TPM
data("TCGA_LAML_Surv")
surv.info <- TCGA_LAML_Surv
dim(TPM)
head(surv.info,3)
c3 <- biomarkers %>%
filter(cluster=="c3") %>%
filter(avg_log2FC>=2)
DefaultAssay(SC1) <- "RNA"
Idents(SC1)="prediction"
#find markers for every cluster compared to all remaining cells, report only the positive ones
SC.markers <- FindAllMarkers(SC1, only.pos = TRUE,
min.pct = 0.25, logfc.threshold = 0.25)
biomarkers <- SC.markers %>%
dplyr::filter(p_val_adj<0.05) %>%
group_by(cluster) %>%
slice_max(n = 20000, order_by = avg_log2FC)
top <- biomarkers %>%
group_by(cluster) %>%
slice_head(n = 4)
top
c3 <- biomarkers %>%
filter(cluster=="c3") %>%
filter(avg_log2FC>=2)
TPM.norm <- log2(TPM + 1)
TPM.norm <- data.frame(t(na.omit(TPM.norm[c3$gene,])))
genes <- colnames(TPM.norm)
tmp <-TPM.norm[rownames(surv.info),]
survival_info_df <- cbind(tmp,surv.info)
library(survival)
multi_COX<-coxph(Surv(futime, fustat) ~ ., data=survival_info_df)
PIPET_KM(data=survival_info_df, genes=genes,coxph=multi_COX, surv_cols=c("fustat","futime"),
xlim=100,legend.title="TCGA-LAML", legend.labs = c("HRisk", "LRisk"),
pval = TRUE, conf.int = TRUE,  palette = "simpsons")
Sys.setenv(LANGUAGE = "en")
library(PIPET)
library(tidyverse)
library(patchwork)
library(Seurat)
library(SeuratData)
pbmc3k.final <- LoadData("pbmc3k", type = "pbmc3k.final")
View(pbmc3k.final)
SC = UpdateSeuratObject(object = pbmc3k.final)
#InstallData("pbmc3k")
pbmc3k.final <- LoadData("pbmc3k", type = "pbmc3k.final")
SC = UpdateSeuratObject(object = pbmc3k.final)
SC
View(SC)
markers <- read.table("../data/AML_Subtypes_signature.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = NULL)
table(markers$class)
head(markers,5)
set.seed(123)
tmp <- PIPET(SC_data=SC, markers=markers, gene_col= "genes", class_col= "class",
nCores=4)
tmp$ID <- rownames(tmp)
metadata <- SC@meta.data
metadata$ID <- rownames(metadata)
meta <- merge(metadata,tmp,by="ID")
rownames(meta) <- meta$ID
SC <- AddMetaData(SC, metadata = meta)
SC1 <- subset(x = SC, subset= (Pvalue < 0.05))
table(SC1$prediction)
DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
metadata <- SC@meta.data
temp <- data.frame(ID=SC1$ID,type=SC1$prediction)
meta <- merge(metadata,temp,by="ID",all = TRUE)
meta$type <- as.character(meta$type)
meta$type  <- ifelse(is.na(meta$type), "Undefined", meta$type)
rownames(meta) <- meta$ID
meta <- meta[SC$ID,]
SC <- AddMetaData(SC, metadata = meta)
library(RColorBrewer)
colors<-brewer.pal(n = 8, name = "Set1")
PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 <- DimPlot(SC, reduction = "umap", group.by = 'seurat_annotations', label = F) +
ggtitle("pbmc3k-Celltypes")
p2 <- PIPET_DotPlot(SC,colors,group="type",title="AML-Subtypes")
p1 | p2
table(SC1$seurat_annotations,SC1$prediction)
gc()
devtools::document()
devtools::build()
